pipeline {
    agent any

    stages {
        stage('Preparation') { 
            steps {
                // Get the code from the GitHub repository
                git branch: 'main', url: 'https://github.com/morshedgit/cicd-test-forntapp.git'
            }
        }

        stage('Build') {
            environment {
                // Define environment variables for the build
                CONTENTFUL_SPACE_ID = "${env.CONTENTFUL_SPACE_ID}"
                CONTENTFUL_ACCESS_TOKEN = "${env.CONTENTFUL_ACCESS_TOKEN}"
                CONTENTFUL_ENVIRONMENT = "${env.CONTENTFUL_ENVIRONMENT}"
                CONTENTFUL_PREVIEW_ACCESS_TOKEN = "${env.CONTENTFUL_PREVIEW_ACCESS_TOKEN}"
                CONTENTFUL_PREVIEW_SECRET = "${env.CONTENTFUL_PREVIEW_SECRET}"
            }
            steps {
                script {
                    // Wrapping the Docker commands inside a script block
                        
                    // docker.withRegistry('http://host.docker.internal:5000') {
                        // def customImage = docker.build("cicd-test/frontend:$BUILD_NUMBER", "-f Dockerfile .")
                        // customImage.push()
                        // customImage.push("latest")                            
                        
                        sh """
                        docker build -t cicd-test/frontend:$BUILD_NUMBER -f Dockerfile .
                        """
                        // Deploy the service
                        // Uncomment the following lines if needed

                        def SERVICE_PORT="8080"
                        def CONTAINER_PORT="80"

                        sh """
                        export SERVICE_NAME=cicd-frontend
                        export SERVICE_PORT=$SERVICE_PORT
                        export CONTAINER_PORT=$CONTAINER_PORT
                        export IMAGE_NAME=cicd-test/frontend
                        export IMAGE_VERSION=$BUILD_NUMBER
                        export ENV=dev
                        envsubst < deployment.yaml > processed-deployment.yaml
                        cat processed-deployment.yaml
                        """

                        sh """
                        minikube -p minikube image load cicd-test/frontend:$BUILD_NUMBER
                        """

                        sh """
                        . ~/.bashrc
                        export SERVICE_NAME=cicd-frontend
                        export SERVICE_PORT=$SERVICE_PORT
                        export CONTAINER_PORT=$CONTAINER_PORT
                        export IMAGE_NAME=cicd-test/frontend
                        export IMAGE_VERSION=$BUILD_NUMBER
                        export ENV=dev
                        envsubst < deployment.yaml | kubectl apply -f -
                        """
                        def SERVICE_NAME="cicd-frontend"

                        sh """
                        . ~/.bashrc
                        export SERVICE_NAME=cicd-frontend
                        kubectl set image deployment/$SERVICE_NAME $SERVICE_NAME=cicd-test/frontend:$BUILD_NUMBER
                        """                    
                    // }
                }
            }
        }
    }
    post {
        always {
            // Actions to perform after the pipeline runs, e.g., cleanup, notifications
            sh 'echo POST ACTIONS'
        }
    }
}
